Program -> Declaration_list $defMain eof
Declaration_list -> Declaration Declaration_list
Declaration_list -> epsilon
Declaration -> Var_declaration
Var_declaration -> Type_specifier $createVar id  Var_dec_index
Var_dec_index -> ; $initial_Var
Var_dec_index -> [ $notVoid num ] $initialArray;
Var_dec_index ->  Fun_declaration
Type_specifier -> int $int
Type_specifier -> void $void
Fun_declaration -> ( $createFunction Params  ) Compound_stmt
Params -> void $void Param_name $push
Params -> int $int_createVar id  Param_index Param_loop
Param_name -> id Param_index Param_loop
Param_name -> epsilon $pop2
Param_list ->  Param Param_loop
Param_loop -> , Param_list
Param_loop -> epsilon
Param -> Type_specifier id  Param_index
Param_index -> epsilon $initial_Var
Param_index -> [ $notVoid ] $initialPointer
Compound_stmt -> { $newScope Declaration_list Statement_list } $endOfScope
Statement_list ->  Statement Statement_list
Statement_list -> epsilon
Statement -> Expression_stmt
Statement -> Compound_stmt
Statement -> Selection_stmt
Statement -> Iteration_stmt
Statement -> Return_stmt
Statement -> Switch_stmt
Expression_stmt -> Expression ;
Expression_stmt -> continue $continue ;
Expression_stmt -> break $break ;
Expression_stmt -> ;
Selection_stmt -> if ( Expression ) Statement else Statement
Iteration_stmt -> while $while ( Expression ) Statement
Return_stmt -> return Return_expression
Return_expression -> ;
Return_expression -> Expression ;
Switch_stmt -> switch $switch ( Expression ) { $newScope Case_stmts Default_stmt } $endOfScope
Case_stmts -> Case_stmt Case_stmts
Case_stmts -> epsilon
Case_stmt -> case num : Statement_list
Default_stmt -> default : Statement_list
Default_stmt -> epsilon
Expression -> id $findID Expression_args
Expression -> Simple_Expression
Expression_args -> Expression_index Expression_relations
Expression_args -> ( Args ) Expression_times Expression_addops Expression_loop
Expression_relations -> = Expression
Expression_relations -> Expression_times Expression_addops Expression_loop
Expression_index -> epsilon
Expression_index -> [ Expression ]
Expression_loop -> Relop Additive_expression
Expression_loop -> epsilon
Relop -> <
Relop -> ==
Additive_expression -> Term Expression_addops
Expression_addops -> Addop Term Expression_addops
Expression_addops -> epsilon
Addop -> +
Addop -> -
Term -> Signed_Factor Expression_times
Expression_times -> * Signed_Factor Expression_times
Expression_times -> epsilon
Signed_Factor -> Factor
Signed_Factor -> + Factor
Signed_Factor -> - Factor 
Factor -> ( Expression )
Factor -> id $findID$idIsNumeric Factor_args
Factor -> num $num
Factor_args -> $beginArgs ( Args $endArgs )
Factor_args -> Expression_index
Args -> Arg_list
Args -> epsilon
Arg_list -> Expression $arg Args_loop
Args_loop -> , Expression $arg Args_loop
Args_loop -> epsilon
Simple_Expression -> Additive_expression_num Expression_loop
Additive_expression_num -> Term_num Expression_addops
Term_num -> Signed_Factor_num Expression_times
Signed_Factor_num -> Factor_num
Signed_Factor_num -> + Factor
Signed_Factor_num -> - Factor
Factor_num -> ( Expression )
Factor_num -> num $num